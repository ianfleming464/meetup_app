{"version":3,"sources":["Event.js","EventList.js","mock-events.js","api.js","CitySearch.js","NumberOfEvents.js","App.js","serviceWorker.js","index.js"],"names":["Event","props","handleShowDetails","state","showDetails","setState","this","event","className","local_date","local_time","name","group","yes_rsvp_count","onClick","description","Component","EventList","events","map","key","id","mockEvents","created","duration","date_in_series_pattern","status","time","updated","utc_offset","waitlist_count","is_online_event","join_mode","lat","lon","urlname","who","localized_location","country","region","timezone","link","visibility","member_pay_fee","rsvp_limit","venue","repinned","address_1","city","localized_country_name","how_to_find_us","getOrRenewAccessToken","type","a","url","axios","get","tokenInfo","localStorage","setItem","data","access_token","refresh_token","Date","now","getAccessToken","accessToken","getItem","code","URLSearchParams","window","location","search","href","lastSavedTime","getSuggestions","query","startsWith","name_string","zip","token","result","getEvents","page","CitySearch","suggestions","handleInputChanged","value","target","then","handleItemClicked","updateEvents","placeholder","onChange","item","NumberOfEvents","eventNumber","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","atatus","install"],"mappings":"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","file":"static/js/main.58b5c514.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class Event extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // by default the full details aren't visible\n      showDetails: false,\n    };\n  }\n\n  handleShowDetails = () => {\n    if (this.state.showDetails === false) {\n      this.setState({ showDetails: true });\n    } else {\n      this.setState({ showDetails: false });\n    }\n  };\n\n  render() {\n    const showDetails = this.state.showDetails;\n    const event = this.props.event;\n\n    return (\n      <div className=\"event\">\n        <p className=\"date\">\n          {event.local_date} - {event.local_time}\n        </p>\n        <p className=\"name\">{event.name}</p>\n        {event.group && event.group.name && <p className=\"group-name\">Group: {event.group.name}</p>}\n        <p className=\"going\">{event.yes_rsvp_count} people are going</p>\n        <button className=\"details-btn\" onClick={() => this.handleShowDetails()}>\n          Details\n        </button>\n        {showDetails && (\n          <div className=\"extra\">\n            <p className=\"description\">{event.description}</p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Event from \"./Event\";\n\nexport default class EventList extends Component {\n  render() {\n    return (\n      <ul className=\"EventList\">\n        {this.props.events.map((event) => (\n          <li key={event.id}>\n            <Event event={event} />\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n","const mockEvents = {\n  city: {\n    id: 1007700,\n    city: \"München\",\n    lat: 48.14,\n    lon: 11.58,\n    state: \"\",\n    country: \"de\",\n    zip: \"meetup3\",\n    member_count: 1257,\n  },\n  events: [\n    {\n      created: 1578988881000,\n      duration: 10800000,\n      id: \"267900600\",\n      name: \"München OutSystems Meetup - Save the date\",\n      date_in_series_pattern: false,\n      status: \"upcoming\",\n      time: 1597248000000,\n      local_date: \"2020-08-12\",\n      local_time: \"18:00\",\n      updated: 1578988881000,\n      utc_offset: 7200000,\n      waitlist_count: 0,\n      yes_rsvp_count: 1,\n      is_online_event: false,\n      group: {\n        created: 1560928375000,\n        name: \"Offizielle OutSystems München Meetup Gruppe\",\n        id: 32208133,\n        join_mode: \"open\",\n        lat: 48.13999938964844,\n        lon: 11.579999923706055,\n        urlname: \"Munchen-OutSystems-Community\",\n        who: \"Members\",\n        localized_location: \"München, Germany\",\n        state: \"\",\n        country: \"de\",\n        region: \"en_US\",\n        timezone: \"Europe/Berlin\",\n      },\n      link: \"https://www.meetup.com/Munchen-OutSystems-Community/events/267900600/\",\n      description: \"Das Thema wird in Kürze veröffentlicht.\",\n      visibility: \"public\",\n      member_pay_fee: false,\n    },\n    {\n      created: 1581639725000,\n      duration: 10800000,\n      id: \"268694958\",\n      name: \"Unternehmertreffen & Start up-Event in München\",\n      rsvp_limit: 30,\n      date_in_series_pattern: false,\n      status: \"upcoming\",\n      time: 1601827200000,\n      local_date: \"2020-10-04\",\n      local_time: \"18:00\",\n      updated: 1581946161000,\n      utc_offset: 7200000,\n      waitlist_count: 0,\n      yes_rsvp_count: 3,\n      venue: {\n        id: 26865368,\n        name: \"The Flushing Meadows Bar, Frauenhoferstraße 32, 80469 München\",\n        lat: 48.128822326660156,\n        lon: 11.574684143066406,\n        repinned: false,\n        address_1: \"Frauenhoferstraße 32, 80469 München\",\n        city: \"München\",\n        country: \"DE\",\n        localized_country_name: \"Germany\",\n      },\n      is_online_event: false,\n      group: {\n        created: 1581635431000,\n        name: \"Unternehmertreffen and Start up-Event München\",\n        id: 33341612,\n        join_mode: \"open\",\n        lat: 48.13999938964844,\n        lon: 11.579999923706055,\n        urlname: \"Unternehmertreffen-Start-up-Event-Munchen\",\n        who: \"Mitglieder\",\n        localized_location: \"München, Germany\",\n        state: \"\",\n        country: \"de\",\n        region: \"en_US\",\n        timezone: \"Europe/Berlin\",\n      },\n      link: \"https://www.meetup.com/Unternehmertreffen-Start-up-Event-Munchen/events/268694958/\",\n      description:\n        \"DAS UNTERNEHMERTREFFEN „MÜNCHEN“ STARTUP EVENT INVESTOREN / BUSINESS-ANGEL**mehr Details in der Beschreibung. Das Unternehmertreffen Munich-Milan ist das Forum für Geschäftsfreunde in ganz Deutschland. Wir hören gemeinsam spannende Vorträge, veranstalten Aktionen, haben Zeit für informelle Gespräche und bahnen Geschäfte an. Wir sind überparteilich und unabhängig. Und vor allem: Wir haben viel Spaß am Netzwerken! Zahlreiche UNTERNEHMER und STARTUP UNTERNEHMEN aus dem Raum München nehmen teil und freuen sich über Jeden, der unser Netzwerk weiter verstärkt. AUCH STUDENTEN MIT GUTEN IDEEN SIND HERZLICH WILLKOMMEN. Informationen und Tickets finden sich unter: https://www.munich-milan.de/cms/de/unternehmertreffen-muenchen-3.\",\n      visibility: \"public\",\n      member_pay_fee: false,\n    },\n    {\n      created: 1585297132000,\n      duration: 7200000,\n      id: \"269686692\",\n      name: \"Pitch Club Developer Edition #63\",\n      date_in_series_pattern: false,\n      status: \"upcoming\",\n      time: 1602698400000,\n      local_date: \"2020-10-14\",\n      local_time: \"20:00\",\n      updated: 1585297132000,\n      utc_offset: 7200000,\n      waitlist_count: 0,\n      yes_rsvp_count: 2,\n      venue: {\n        id: 25959917,\n        name: \"Bar Ludwig II\",\n        lat: 48.12186813354492,\n        lon: 11.58230972290039,\n        repinned: false,\n        address_1: \"Hochstraße 77\",\n        city: \"München\",\n        country: \"de\",\n        localized_country_name: \"Germany\",\n      },\n      is_online_event: false,\n      group: {\n        created: 1539021073000,\n        name: \"Pitch Club Developer Edition München\",\n        id: 30141555,\n        join_mode: \"approval\",\n        lat: 48.13999938964844,\n        lon: 11.579999923706055,\n        urlname: \"Pitch-Club-Developer-Edition-Munchen\",\n        who: \"Mitglieder\",\n        localized_location: \"München, Germany\",\n        state: \"\",\n        country: \"de\",\n        region: \"en_US\",\n        timezone: \"Europe/Berlin\",\n      },\n      link: \"https://www.meetup.com/Pitch-Club-Developer-Edition-Munchen/events/269686692/\",\n      description:\n        \"Pitch Club is looking for Software Developers and IT-Professionals for its upcoming event Pitch Club Developer Edition #63 on October 14th, 2020 starting at 5 p.m. at Bar Ludwig II (Hochstraße 77, 81541 Munich) in Munich. So this is like a job interview - but reversed! Companies and startups pitch themselves, the HR concepts, jobs and projects they offer to the audience, i.e. the Software Developers and IT-Professionals, who ask tough and hair-raising questions in addition. After the pitches you can get more information in 1-on-1 talks with the companies. All participants are invited to snacks, drinks and maybe you get to know your future employer. After the official part ends at 8 p.m., the event shifts over to the Afterwork Party, accessible for everyone. The participation for the official part as well as catering (including snacks, soft drinks, beverages &amp; long drinks) are for free! If you want to participate at the invite-only event, starting at 5 p.m., please apply via https://pcde.io/en/. Please note: Most pitches will be held in German. Nonetheless, English-speaking developers are welcomed, too! If you are interested in taking part at the Afterwork Party, starting at 8 p.m., please register via https://pcde.io/en/pcde-afterwork/\",\n      visibility: \"public\",\n      member_pay_fee: false,\n    },\n    {\n      created: 1594142093000,\n      duration: 7200000,\n      id: \"271775637\",\n      name: \"Beer, Brotzeit and IoT @ Concept Reply\",\n      date_in_series_pattern: false,\n      status: \"upcoming\",\n      time: 1603386000000,\n      local_date: \"2020-10-22\",\n      local_time: \"19:00\",\n      updated: 1594142093000,\n      utc_offset: 7200000,\n      waitlist_count: 0,\n      yes_rsvp_count: 30,\n      venue: {\n        id: 26066109,\n        name: \"Luise-Ullrich-Straße 14\",\n        lat: 48.14474868774414,\n        lon: 11.538175582885742,\n        repinned: true,\n        address_1: \"Luise-Ullrich-Straße 14\",\n        city: \"München\",\n        country: \"de\",\n        localized_country_name: \"Germany\",\n      },\n      is_online_event: false,\n      group: {\n        created: 1508251656000,\n        name: \"München IoT Meetup\",\n        id: 26294946,\n        join_mode: \"open\",\n        lat: 48.13999938964844,\n        lon: 11.579999923706055,\n        urlname: \"Muenchen-IoT-Meetup\",\n        who: \"Members\",\n        localized_location: \"München, Germany\",\n        state: \"\",\n        country: \"de\",\n        region: \"en_US\",\n        timezone: \"Europe/Berlin\",\n      },\n      link: \"https://www.meetup.com/Muenchen-IoT-Meetup/events/271775637/\",\n      description:\n        \"We will also broadcast the event live for people who would rather stay at home. We will post the link closer to the event. How to find the new venue: Enter the Nove Building from Luise-Ullrich-Straße 14 (you should see a statue and a restaurant outside). On entering you will see the main reception in front of you with a security guard, two lifts to the left and a model of the building to the right. Walk toward the reception, take the first left and walk toward the other two lifts in front of you. The first door on the left with the Reply logo leads to the Meetup on the *ground floor*. Agenda: 18:30: Brotzeit 19:00: Markus Jung (OSRAM) - The OSRAM portfolio of IoT connected products 19:30: Christopher Ziegler (Actyx.io) - The modern way of automating and digitizing factories 20:00: Networking. Food and drink served throughout. All presentations in English.\",\n      how_to_find_us:\n        \"Public transport: Donnersbergerstraße | 250m (Tram 16, 17) Donnersbergerbrücke | 450m (Suburban train towards Pasing, Bus 53 & 63) Address: Concept Reply (part of REPLY AG) Nove building Luise-Ullrich-Straße 14 80636 München*Reply Büro beim EG*\",\n      visibility: \"public\",\n      member_pay_fee: false,\n    },\n  ],\n};\nexport { mockEvents };\n","import { mockEvents } from \"./mock-events\";\nimport axios from \"axios\";\n\nasync function getOrRenewAccessToken(type, key) {\n  let url;\n  if (type === \"get\") {\n    // Lambda endpoint to get token by code\n    url = \"https://0p4rf1s1zd.execute-api.eu-central-1.amazonaws.com/dev/api/token/\" + key;\n  } else if (type === \"renew\") {\n    // Lambda endpoint to get token by refresh_token\n    url = \"https://0p4rf1s1zd.execute-api.eu-central-1.amazonaws.com/dev/api/refresh/\" + key;\n  }\n\n  // use axios to make GET request to endpoint\n  const tokenInfo = await axios.get(url);\n\n  // Save tokens to localStorage together with a timestamp\n  localStorage.setItem(\"access_token\", tokenInfo.data.access_token);\n  localStorage.setItem(\"refresh_token\", tokenInfo.data.refresh_token);\n  localStorage.setItem(\"last_saved_time\", Date.now());\n\n  // Return the access_token\n  return tokenInfo.data.access_token;\n}\n\nfunction getAccessToken() {\n  const accessToken = localStorage.getItem(\"access_token\");\n\n  if (!accessToken) {\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = searchParams.get(\"code\");\n\n    if (!code) {\n      window.location.href =\n        \"https://secure.meetup.com/oauth2/authorize?client_id=pecpj0iiatck4s5pl90ladg8gp&response_type=code&redirect_uri=https://ianfleming464.github.io/meetup_app/\";\n      return null;\n    }\n    return getOrRenewAccessToken(\"get\", code);\n  }\n\n  const lastSavedTime = localStorage.getItem(\"last_saved_time\");\n\n  if (accessToken && Date.now() - lastSavedTime < 3600000) {\n    return accessToken;\n  }\n  //if token is expired, we renew using refresh_token\n  const refreshToken = localStorage.getItem(\"refresh_token\");\n  return getOrRenewAccessToken(\"renew\", refreshToken);\n}\n\nasync function getSuggestions(query) {\n  if (window.location.href.startsWith(\"http://localhost\")) {\n    return [\n      {\n        city: \"Munich\",\n        country: \"de\",\n        localized_country_name: \"Germany\",\n        name_string: \"Munich, Germany\",\n        zip: \"meetup3\",\n        lat: 48.14,\n        lon: 11.58,\n      },\n      {\n        city: \"Munich\",\n        country: \"us\",\n        localized_country_name: \"USA\",\n        state: \"ND\",\n        name_string: \"Munich, North Dakota, USA\",\n        zip: \"58352\",\n        lat: 48.66,\n        lon: -98.85,\n      },\n    ];\n  }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    const url = \"https://api.meetup.com/find/locations?&sign=true&photo-host=public&query=\" + query + \"&access_token=\" + token;\n    const result = await axios.get(url);\n    return result.data;\n  }\n  return [];\n}\n\nasync function getEvents(lat, lon, page) {\n  if (window.location.href.startsWith(\"http://localhost\")) {\n    return mockEvents.events;\n  }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    let url = \"https://api.meetup.com/find/upcoming_events?&sign=true&photo-host=public\" + \"&access_token=\" + token;\n    // lat, lon is optional; if you have a lat and lon, you can add them\n    if (lat && lon) {\n      url += \"&lat=\" + lat + \"&lon=\" + lon;\n    }\n    if (page) {\n      url += \"&page=\" + page;\n    }\n    const result = await axios.get(url);\n    return result.data.events;\n  }\n  return [];\n}\n\nexport { getSuggestions, getEvents };\n","import React, { Component } from \"react\";\nimport { getSuggestions } from \"./api\";\n\nexport default class CitySearch extends Component {\n  state = {\n    query: \"\",\n    suggestions: [],\n  };\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.setState({ query: value });\n    getSuggestions(value).then((suggestions) => this.setState({ suggestions }));\n  };\n\n  handleItemClicked = (value, lat, lon) => {\n    this.setState({ query: value, suggestions: [] });\n    this.props.updateEvents(lat, lon);\n  };\n\n  render() {\n    return (\n      <div className=\"CitySearch\">\n        <input type=\"text\" className=\"city\" placeholder=\"city\" value={this.state.query} onChange={this.handleInputChanged} />\n        <ul className=\"suggestions\">\n          {this.state.suggestions.map((item) => (\n            <li key={item.name_string} onClick={() => this.handleItemClicked(item.name_string, item.lat, item.lon)}>\n              {item.name_string}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class NumberOfEvents extends Component {\n  state = {\n    eventNumber: 32,\n  };\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.setState({ eventNumber: value });\n    this.props.updateEvents(null, null, value);\n  };\n\n  render() {\n    return (\n      <div className=\"numberOfEvents\">\n        <span>Display </span>\n        <input className=\"number-of-events\" type=\"number\" value={this.state.eventNumber} onChange={this.handleInputChanged} />\n        <span> events</span>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport EventList from \"./EventList\";\nimport CitySearch from \"./CitySearch\";\nimport { getEvents } from \"./api\";\nimport NumberOfEvents from \"./NumberOfEvents\";\n\nclass App extends Component {\n  state = {\n    events: [],\n    lat: null,\n    lon: null,\n    page: null,\n  };\n\n  componentDidMount() {\n    this.updateEvents();\n  }\n  updateEvents = (lat, lon, page) => {\n    if (lat && lon) {\n      getEvents(lat, lon, this.state.page).then((events) => this.setState({ events, lat, lon }));\n    } else if (page) {\n      getEvents(this.state.lat, this.state.lon, page).then((events) => this.setState({ events, page }));\n    } else {\n      getEvents(this.state.lat, this.state.lon, this.state.page).then((events) => this.setState({ events }));\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <CitySearch updateEvents={this.updateEvents} />\n        <EventList events={this.state.events} />\n        <NumberOfEvents updateEvents={this.updateEvents} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport * as atatus from \"atatus-spa\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\natatus.config(\"3bc6025c5f6143b397f066be2e9ee98d\").install();\n\n// atatus.notify(new Error(\"Test Atatus Setup\"));\n"],"sourceRoot":""}